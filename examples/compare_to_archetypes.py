"""
2015 - Mike Schladt
Example script compares vecotors to archetypes
Generates a graph against each archetype 
"""
import MySQLdb 
import lib.mfv as mfv
import lib.config as CONST
import numpy
import json 
import sys

db_host = CONST.DB_HOST
db_user = CONST.DB_USER
db_pass = CONST.DB_PASS
db_name = CONST.DB_NAME

#establish database connection
connection = MySQLdb.connect(db_host, db_user, db_pass, db_name)
cursor = connection.cursor()

test_task_id = int(sys.argv[1])

#retrieve features from the database
cmd = "SELECT label,mean_features,stddev_features,max_value_features FROM archetypes"

cursor.execute(cmd)
results = cursor.fetchall()

for result in results :
    #parse data from results    
    archetype_label = result[0]
    mean_features = json.loads(result[1])
    stddev_features = json.loads(result[2])
    max_value_features = json.loads(result[3])

    #add features to FeatureVectors
    mean_vector = mfv.FeatureVector(None,None,None,mean_features)
    stddev_vector = mfv.FeatureVector(None,None,None,stddev_features)
    max_values_vector = mfv.FeatureVector(None,None,None,max_value_features)

    #retrieve and normalize the test_vector
    test_vector = mfv.select_vectors(None,None,[test_task_id],None)[0]
    test_vectors = mfv.normalize_vectors([test_vector],max_values_vector)

    #add labels to vectors
    mean_vector.label = archetype_label+"_mean"
    stddev_vector.label = archetype_label+"_stddev"

    title = "Comparison of Task {0} to Archetype : {1}".format(test_task_id,archetype_label)
    filename = "comparisions/{0}/{1}".format(test_task_id, archetype_label)
    print mfv.plotly_scatter(test_vectors, mean_vector, stddev_vector, None, filename, title)