"""
2015 - Mike Schladt
Collection of helper functions to interact with the Cuckoo Sandbox
cuckoo_functions.py - contains functions required to interact with cuckoo v 2.0 
"""

import argparse
import requests
import json
import time


CUCKOO_REST_HOST = 'http://localhost:8090/'

def submit_sample(sample_path) :   
    """
    Submits samples to cuckoo sandbox
    INPUT : sample_path : filepath to sample to submit
    OUTPUT : task_ids : list : task ids return from cuckoo
    """
    #container for task ids
    task_ids = []
   
    #submit to win7x32 old
    cuckoo_rest_host = CUCKOO_REST_HOST
    request_url = "{0}tasks/create/file".format(cuckoo_rest_host)
    sample_file = {'file': open(sample_path, 'rb')}
    params = {'timeout': '120', 'enforce_timeout': 1, 'platform' : 'windows', 'tags' : '32_bit'} #set params
    response = requests.post(request_url, files=sample_file, data=params);
    task_ids.append(response.json()['task_id'])
    

    #submit to win7x64 new
    cuckoo_rest_host = CUCKOO_REST_HOST
    request_url = "{0}tasks/create/file".format(cuckoo_rest_host)
    sample_file = {'file': open(sample_path, 'rb')}
    params = {'timeout': '120', 'enforce_timeout': 1, 'platform' : 'windows', 'tags' : '64_bit'} #set params
    response = requests.post(request_url, files=sample_file, data=params);
    task_ids.append(response.json()['task_id'])

    #add task ids to database 
    for task_id in task_ids :
        print "Added task number {0} to Cuckoo Sandbox".format(task_id)
    
    return task_ids


if __name__ == "__main__" :
    parser = argparse.ArgumentParser(description='Hepler functions for malware feature project.')
    parser.add_argument('sample', help='Filepath of sample to submit', nargs='+')
    args = parser.parse_args()
    
    #submit samples to cuckoo sanbox
    for sample in args.sample :
        submit_sample(sample)
        time.sleep(3)